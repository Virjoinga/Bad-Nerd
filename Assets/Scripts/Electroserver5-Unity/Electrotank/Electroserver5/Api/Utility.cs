using System;
using System.Collections.Generic;
using Electrotank.Electroserver5.Api.Helper;

namespace Electrotank.Electroserver5.Api
{
	public class Utility
	{
		public static readonly string Version;

		private static readonly IDictionary<MessageType, Type> messageTypeToApiClass;

		private static readonly IDictionary<short, MessageType> messageTypeIndicatorToMessageType;

		private static readonly IDictionary<MessageType, short> messageTypeToMessageTypeIndicator;

		static Utility()
		{
			Version = "5.3.3";
			messageTypeToApiClass = new Dictionary<MessageType, Type>();
			messageTypeIndicatorToMessageType = new Dictionary<short, MessageType>(Comparers.Shorts);
			messageTypeToMessageTypeIndicator = new Dictionary<MessageType, short>();
			messageTypeIndicatorToMessageType.Add(60, MessageType.CrossDomainRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.CrossDomainRequest, 60);
			messageTypeIndicatorToMessageType.Add(81, MessageType.CreateRoomRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.CreateRoomRequest, 81);
			messageTypeIndicatorToMessageType.Add(74, MessageType.JoinRoomRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.JoinRoomRequest, 74);
			messageTypeIndicatorToMessageType.Add(76, MessageType.LoginRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.LoginRequest, 76);
			messageTypeIndicatorToMessageType.Add(108, MessageType.LogOutRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.LogOutRequest, 108);
			messageTypeIndicatorToMessageType.Add(37, MessageType.ValidateAdditionalLoginRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.ValidateAdditionalLoginRequest, 37);
			messageTypeIndicatorToMessageType.Add(38, MessageType.ValidateAdditionalLoginResponse);
			messageTypeToMessageTypeIndicator.Add(MessageType.ValidateAdditionalLoginResponse, 38);
			messageTypeIndicatorToMessageType.Add(80, MessageType.PublicMessageRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.PublicMessageRequest, 80);
			messageTypeIndicatorToMessageType.Add(112, MessageType.PrivateMessageRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.PrivateMessageRequest, 112);
			messageTypeIndicatorToMessageType.Add(118, MessageType.LeaveRoomRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.LeaveRoomRequest, 118);
			messageTypeIndicatorToMessageType.Add(110, MessageType.CreateRoomVariableRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.CreateRoomVariableRequest, 110);
			messageTypeIndicatorToMessageType.Add(78, MessageType.DeleteRoomVariableRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.DeleteRoomVariableRequest, 78);
			messageTypeIndicatorToMessageType.Add(111, MessageType.UpdateRoomVariableRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.UpdateRoomVariableRequest, 111);
			messageTypeIndicatorToMessageType.Add(115, MessageType.GetZonesRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.GetZonesRequest, 115);
			messageTypeIndicatorToMessageType.Add(116, MessageType.GetRoomsInZoneRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.GetRoomsInZoneRequest, 116);
			messageTypeIndicatorToMessageType.Add(104, MessageType.UpdateRoomDetailsRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.UpdateRoomDetailsRequest, 104);
			messageTypeIndicatorToMessageType.Add(65, MessageType.AddRoomOperatorRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.AddRoomOperatorRequest, 65);
			messageTypeIndicatorToMessageType.Add(66, MessageType.RemoveRoomOperatorRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.RemoveRoomOperatorRequest, 66);
			messageTypeIndicatorToMessageType.Add(68, MessageType.FindZoneAndRoomByNameRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.FindZoneAndRoomByNameRequest, 68);
			messageTypeIndicatorToMessageType.Add(107, MessageType.GetUsersInRoomRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.GetUsersInRoomRequest, 107);
			messageTypeIndicatorToMessageType.Add(72, MessageType.DeleteUserVariableRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.DeleteUserVariableRequest, 72);
			messageTypeIndicatorToMessageType.Add(73, MessageType.UpdateUserVariableRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.UpdateUserVariableRequest, 73);
			messageTypeIndicatorToMessageType.Add(75, MessageType.AddBuddiesRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.AddBuddiesRequest, 75);
			messageTypeIndicatorToMessageType.Add(77, MessageType.RemoveBuddiesRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.RemoveBuddiesRequest, 77);
			messageTypeIndicatorToMessageType.Add(83, MessageType.EvictUserFromRoomRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.EvictUserFromRoomRequest, 83);
			messageTypeIndicatorToMessageType.Add(48, MessageType.GetUserCountRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.GetUserCountRequest, 48);
			messageTypeIndicatorToMessageType.Add(67, MessageType.PluginRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.PluginRequest, 67);
			messageTypeIndicatorToMessageType.Add(40, MessageType.CreateOrJoinGameRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.CreateOrJoinGameRequest, 40);
			messageTypeIndicatorToMessageType.Add(52, MessageType.JoinGameRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.JoinGameRequest, 52);
			messageTypeIndicatorToMessageType.Add(42, MessageType.FindGamesRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.FindGamesRequest, 42);
			messageTypeIndicatorToMessageType.Add(43, MessageType.GetUserVariablesRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.GetUserVariablesRequest, 43);
			messageTypeIndicatorToMessageType.Add(51, MessageType.AggregatePluginRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.AggregatePluginRequest, 51);
			messageTypeIndicatorToMessageType.Add(45, MessageType.GetServerLocalTimeRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.GetServerLocalTimeRequest, 45);
			messageTypeIndicatorToMessageType.Add(99, MessageType.ConnectionResponse);
			messageTypeToMessageTypeIndicator.Add(MessageType.ConnectionResponse, 99);
			messageTypeIndicatorToMessageType.Add(62, MessageType.CrossDomainResponse);
			messageTypeToMessageTypeIndicator.Add(MessageType.CrossDomainResponse, 62);
			messageTypeIndicatorToMessageType.Add(109, MessageType.LoginResponse);
			messageTypeToMessageTypeIndicator.Add(MessageType.LoginResponse, 109);
			messageTypeIndicatorToMessageType.Add(98, MessageType.GetZonesResponse);
			messageTypeToMessageTypeIndicator.Add(MessageType.GetZonesResponse, 98);
			messageTypeIndicatorToMessageType.Add(100, MessageType.GetRoomsInZoneResponse);
			messageTypeToMessageTypeIndicator.Add(MessageType.GetRoomsInZoneResponse, 100);
			messageTypeIndicatorToMessageType.Add(101, MessageType.GenericErrorResponse);
			messageTypeToMessageTypeIndicator.Add(MessageType.GenericErrorResponse, 101);
			messageTypeIndicatorToMessageType.Add(103, MessageType.FindZoneAndRoomByNameResponse);
			messageTypeToMessageTypeIndicator.Add(MessageType.FindZoneAndRoomByNameResponse, 103);
			messageTypeIndicatorToMessageType.Add(70, MessageType.GetUsersInRoomResponse);
			messageTypeToMessageTypeIndicator.Add(MessageType.GetUsersInRoomResponse, 70);
			messageTypeIndicatorToMessageType.Add(49, MessageType.GetUserCountResponse);
			messageTypeToMessageTypeIndicator.Add(MessageType.GetUserCountResponse, 49);
			messageTypeIndicatorToMessageType.Add(95, MessageType.CreateOrJoinGameResponse);
			messageTypeToMessageTypeIndicator.Add(MessageType.CreateOrJoinGameResponse, 95);
			messageTypeIndicatorToMessageType.Add(41, MessageType.FindGamesResponse);
			messageTypeToMessageTypeIndicator.Add(MessageType.FindGamesResponse, 41);
			messageTypeIndicatorToMessageType.Add(61, MessageType.GetUserVariablesResponse);
			messageTypeToMessageTypeIndicator.Add(MessageType.GetUserVariablesResponse, 61);
			messageTypeIndicatorToMessageType.Add(92, MessageType.AddBuddiesResponse);
			messageTypeToMessageTypeIndicator.Add(MessageType.AddBuddiesResponse, 92);
			messageTypeIndicatorToMessageType.Add(47, MessageType.RemoveBuddiesResponse);
			messageTypeToMessageTypeIndicator.Add(MessageType.RemoveBuddiesResponse, 47);
			messageTypeIndicatorToMessageType.Add(44, MessageType.GetServerLocalTimeResponse);
			messageTypeToMessageTypeIndicator.Add(MessageType.GetServerLocalTimeResponse, 44);
			messageTypeIndicatorToMessageType.Add(97, MessageType.PublicMessageEvent);
			messageTypeToMessageTypeIndicator.Add(MessageType.PublicMessageEvent, 97);
			messageTypeIndicatorToMessageType.Add(114, MessageType.PrivateMessageEvent);
			messageTypeToMessageTypeIndicator.Add(MessageType.PrivateMessageEvent, 114);
			messageTypeIndicatorToMessageType.Add(105, MessageType.SessionIdleEvent);
			messageTypeToMessageTypeIndicator.Add(MessageType.SessionIdleEvent, 105);
			messageTypeIndicatorToMessageType.Add(82, MessageType.JoinRoomEvent);
			messageTypeToMessageTypeIndicator.Add(MessageType.JoinRoomEvent, 82);
			messageTypeIndicatorToMessageType.Add(90, MessageType.JoinZoneEvent);
			messageTypeToMessageTypeIndicator.Add(MessageType.JoinZoneEvent, 90);
			messageTypeIndicatorToMessageType.Add(85, MessageType.UserUpdateEvent);
			messageTypeToMessageTypeIndicator.Add(MessageType.UserUpdateEvent, 85);
			messageTypeIndicatorToMessageType.Add(86, MessageType.ZoneUpdateEvent);
			messageTypeToMessageTypeIndicator.Add(MessageType.ZoneUpdateEvent, 86);
			messageTypeIndicatorToMessageType.Add(87, MessageType.LeaveRoomEvent);
			messageTypeToMessageTypeIndicator.Add(MessageType.LeaveRoomEvent, 87);
			messageTypeIndicatorToMessageType.Add(88, MessageType.LeaveZoneEvent);
			messageTypeToMessageTypeIndicator.Add(MessageType.LeaveZoneEvent, 88);
			messageTypeIndicatorToMessageType.Add(113, MessageType.RoomVariableUpdateEvent);
			messageTypeToMessageTypeIndicator.Add(MessageType.RoomVariableUpdateEvent, 113);
			messageTypeIndicatorToMessageType.Add(69, MessageType.UpdateRoomDetailsEvent);
			messageTypeToMessageTypeIndicator.Add(MessageType.UpdateRoomDetailsEvent, 69);
			messageTypeIndicatorToMessageType.Add(79, MessageType.BuddyStatusUpdatedEvent);
			messageTypeToMessageTypeIndicator.Add(MessageType.BuddyStatusUpdatedEvent, 79);
			messageTypeIndicatorToMessageType.Add(84, MessageType.UserEvictedFromRoomEvent);
			messageTypeToMessageTypeIndicator.Add(MessageType.UserEvictedFromRoomEvent, 84);
			messageTypeIndicatorToMessageType.Add(89, MessageType.UserVariableUpdateEvent);
			messageTypeToMessageTypeIndicator.Add(MessageType.UserVariableUpdateEvent, 89);
			messageTypeIndicatorToMessageType.Add(102, MessageType.PluginMessageEvent);
			messageTypeToMessageTypeIndicator.Add(MessageType.PluginMessageEvent, 102);
			messageTypeIndicatorToMessageType.Add(71, MessageType.AggregatePluginMessageEvent);
			messageTypeToMessageTypeIndicator.Add(MessageType.AggregatePluginMessageEvent, 71);
			messageTypeIndicatorToMessageType.Add(50, MessageType.RegistryConnectToPreferredGatewayRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.RegistryConnectToPreferredGatewayRequest, 50);
			messageTypeIndicatorToMessageType.Add(122, MessageType.DisconnectedEvent);
			messageTypeToMessageTypeIndicator.Add(MessageType.DisconnectedEvent, 122);
			messageTypeIndicatorToMessageType.Add(35, MessageType.GatewayStartupExceptionsMessage);
			messageTypeToMessageTypeIndicator.Add(MessageType.GatewayStartupExceptionsMessage, 35);
			messageTypeIndicatorToMessageType.Add(121, MessageType.RegistryLoginResponse);
			messageTypeToMessageTypeIndicator.Add(MessageType.RegistryLoginResponse, 121);
			messageTypeIndicatorToMessageType.Add(33, MessageType.RegistryConnectionResponse);
			messageTypeToMessageTypeIndicator.Add(MessageType.RegistryConnectionResponse, 33);
			messageTypeIndicatorToMessageType.Add(94, MessageType.GatewayKickUserRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.GatewayKickUserRequest, 94);
			messageTypeIndicatorToMessageType.Add(1, MessageType.ServerKickUserEvent);
			messageTypeToMessageTypeIndicator.Add(MessageType.ServerKickUserEvent, 1);
			messageTypeIndicatorToMessageType.Add(63, MessageType.UdpBackchannelEvent);
			messageTypeToMessageTypeIndicator.Add(MessageType.UdpBackchannelEvent, 63);
			messageTypeIndicatorToMessageType.Add(117, MessageType.Unknown);
			messageTypeToMessageTypeIndicator.Add(MessageType.Unknown, 117);
			messageTypeIndicatorToMessageType.Add(144, MessageType.RtmpPlayVideo);
			messageTypeToMessageTypeIndicator.Add(MessageType.RtmpPlayVideo, 144);
			messageTypeIndicatorToMessageType.Add(145, MessageType.RtmpEventResponse);
			messageTypeToMessageTypeIndicator.Add(MessageType.RtmpEventResponse, 145);
			messageTypeIndicatorToMessageType.Add(146, MessageType.RtmpRecordVideo);
			messageTypeToMessageTypeIndicator.Add(MessageType.RtmpRecordVideo, 146);
			messageTypeIndicatorToMessageType.Add(147, MessageType.RtmpPublishVideo);
			messageTypeToMessageTypeIndicator.Add(MessageType.RtmpPublishVideo, 147);
			messageTypeIndicatorToMessageType.Add(148, MessageType.RtmpUnpublishVideo);
			messageTypeToMessageTypeIndicator.Add(MessageType.RtmpUnpublishVideo, 148);
			messageTypeIndicatorToMessageType.Add(149, MessageType.RtmpAppendVideo);
			messageTypeToMessageTypeIndicator.Add(MessageType.RtmpAppendVideo, 149);
			messageTypeIndicatorToMessageType.Add(150, MessageType.RtmpStreamingStart);
			messageTypeToMessageTypeIndicator.Add(MessageType.RtmpStreamingStart, 150);
			messageTypeIndicatorToMessageType.Add(151, MessageType.RtmpStreamingStop);
			messageTypeToMessageTypeIndicator.Add(MessageType.RtmpStreamingStop, 151);
			messageTypeIndicatorToMessageType.Add(152, MessageType.DHInitiate);
			messageTypeToMessageTypeIndicator.Add(MessageType.DHInitiate, 152);
			messageTypeIndicatorToMessageType.Add(153, MessageType.DHPublicNumbers);
			messageTypeToMessageTypeIndicator.Add(MessageType.DHPublicNumbers, 153);
			messageTypeIndicatorToMessageType.Add(154, MessageType.DHSharedModulusRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.DHSharedModulusRequest, 154);
			messageTypeIndicatorToMessageType.Add(155, MessageType.DHSharedModulusResponse);
			messageTypeToMessageTypeIndicator.Add(MessageType.DHSharedModulusResponse, 155);
			messageTypeIndicatorToMessageType.Add(156, MessageType.EncryptionStateChange);
			messageTypeToMessageTypeIndicator.Add(MessageType.EncryptionStateChange, 156);
			messageTypeIndicatorToMessageType.Add(157, MessageType.ConnectionAttemptResponse);
			messageTypeToMessageTypeIndicator.Add(MessageType.ConnectionAttemptResponse, 157);
			messageTypeIndicatorToMessageType.Add(158, MessageType.ConnectionClosedEvent);
			messageTypeToMessageTypeIndicator.Add(MessageType.ConnectionClosedEvent, 158);
			messageTypeIndicatorToMessageType.Add(53, MessageType.RegisterUDPConnectionRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.RegisterUDPConnectionRequest, 53);
			messageTypeIndicatorToMessageType.Add(54, MessageType.RegisterUDPConnectionResponse);
			messageTypeToMessageTypeIndicator.Add(MessageType.RegisterUDPConnectionResponse, 54);
			messageTypeIndicatorToMessageType.Add(57, MessageType.RemoveUDPConnectionRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.RemoveUDPConnectionRequest, 57);
			messageTypeIndicatorToMessageType.Add(46, MessageType.RemoveUDPConnectionResponse);
			messageTypeToMessageTypeIndicator.Add(MessageType.RemoveUDPConnectionResponse, 46);
			messageTypeIndicatorToMessageType.Add(55, MessageType.PingRequest);
			messageTypeToMessageTypeIndicator.Add(MessageType.PingRequest, 55);
			messageTypeIndicatorToMessageType.Add(56, MessageType.PingResponse);
			messageTypeToMessageTypeIndicator.Add(MessageType.PingResponse, 56);
			messageTypeIndicatorToMessageType.Add(0, MessageType.IdleTimeoutWarningEvent);
			messageTypeToMessageTypeIndicator.Add(MessageType.IdleTimeoutWarningEvent, 0);
			messageTypeIndicatorToMessageType.Add(2, MessageType.MarkGatewayClientLoggedInMessage);
			messageTypeToMessageTypeIndicator.Add(MessageType.MarkGatewayClientLoggedInMessage, 2);
			messageTypeToApiClass.Add(MessageType.LoginRequest, typeof(LoginRequest));
			messageTypeToApiClass.Add(MessageType.IdleTimeoutWarningEvent, typeof(IdleTimeoutWarningEvent));
			messageTypeToApiClass.Add(MessageType.GetRoomsInZoneResponse, typeof(GetRoomsInZoneResponse));
			messageTypeToApiClass.Add(MessageType.UpdateRoomDetailsRequest, typeof(UpdateRoomDetailsRequest));
			messageTypeToApiClass.Add(MessageType.DHInitiate, typeof(DHInitiateKeyExchangeRequest));
			messageTypeToApiClass.Add(MessageType.ServerKickUserEvent, typeof(ServerKickUserEvent));
			messageTypeToApiClass.Add(MessageType.LogOutRequest, typeof(LogOutRequest));
			messageTypeToApiClass.Add(MessageType.CrossDomainResponse, typeof(CrossDomainPolicyResponse));
			messageTypeToApiClass.Add(MessageType.AggregatePluginRequest, typeof(AggregatePluginRequest));
			messageTypeToApiClass.Add(MessageType.GetUserVariablesRequest, typeof(GetUserVariablesRequest));
			messageTypeToApiClass.Add(MessageType.RemoveBuddiesRequest, typeof(RemoveBuddiesRequest));
			messageTypeToApiClass.Add(MessageType.FindZoneAndRoomByNameResponse, typeof(FindZoneAndRoomByNameResponse));
			messageTypeToApiClass.Add(MessageType.SessionIdleEvent, typeof(SessionIdleEvent));
			messageTypeToApiClass.Add(MessageType.AddBuddiesResponse, typeof(AddBuddiesResponse));
			messageTypeToApiClass.Add(MessageType.FindGamesResponse, typeof(FindGamesResponse));
			messageTypeToApiClass.Add(MessageType.EncryptionStateChange, typeof(EncryptionStateChangeEvent));
			messageTypeToApiClass.Add(MessageType.RemoveUDPConnectionResponse, typeof(RemoveUDPConnectionResponse));
			messageTypeToApiClass.Add(MessageType.RegisterUDPConnectionRequest, typeof(RegisterUDPConnectionRequest));
			messageTypeToApiClass.Add(MessageType.PublicMessageRequest, typeof(PublicMessageRequest));
			messageTypeToApiClass.Add(MessageType.CreateOrJoinGameResponse, typeof(CreateOrJoinGameResponse));
			messageTypeToApiClass.Add(MessageType.ConnectionAttemptResponse, typeof(ConnectionAttemptResponse));
			messageTypeToApiClass.Add(MessageType.PluginMessageEvent, typeof(PluginMessageEvent));
			messageTypeToApiClass.Add(MessageType.RegisterUDPConnectionResponse, typeof(RegisterUDPConnectionResponse));
			messageTypeToApiClass.Add(MessageType.GenericErrorResponse, typeof(GenericErrorResponse));
			messageTypeToApiClass.Add(MessageType.PrivateMessageRequest, typeof(PrivateMessageRequest));
			messageTypeToApiClass.Add(MessageType.GetServerLocalTimeRequest, typeof(GetServerLocalTimeRequest));
			messageTypeToApiClass.Add(MessageType.RemoveRoomOperatorRequest, typeof(RemoveRoomOperatorRequest));
			messageTypeToApiClass.Add(MessageType.LoginResponse, typeof(LoginResponse));
			messageTypeToApiClass.Add(MessageType.JoinRoomEvent, typeof(JoinRoomEvent));
			messageTypeToApiClass.Add(MessageType.GetUsersInRoomRequest, typeof(GetUsersInRoomRequest));
			messageTypeToApiClass.Add(MessageType.GetUserCountRequest, typeof(GetUserCountRequest));
			messageTypeToApiClass.Add(MessageType.JoinZoneEvent, typeof(JoinZoneEvent));
			messageTypeToApiClass.Add(MessageType.GetRoomsInZoneRequest, typeof(GetRoomsInZoneRequest));
			messageTypeToApiClass.Add(MessageType.RemoveUDPConnectionRequest, typeof(RemoveUDPConnectionRequest));
			messageTypeToApiClass.Add(MessageType.DHSharedModulusResponse, typeof(DHSharedModulusResponse));
			messageTypeToApiClass.Add(MessageType.CreateRoomVariableRequest, typeof(CreateRoomVariableRequest));
			messageTypeToApiClass.Add(MessageType.JoinGameRequest, typeof(JoinGameRequest));
			messageTypeToApiClass.Add(MessageType.DeleteRoomVariableRequest, typeof(DeleteRoomVariableRequest));
			messageTypeToApiClass.Add(MessageType.GetZonesResponse, typeof(GetZonesResponse));
			messageTypeToApiClass.Add(MessageType.GatewayKickUserRequest, typeof(GatewayKickUserRequest));
			messageTypeToApiClass.Add(MessageType.AddBuddiesRequest, typeof(AddBuddiesRequest));
			messageTypeToApiClass.Add(MessageType.GetZonesRequest, typeof(GetZonesRequest));
			messageTypeToApiClass.Add(MessageType.UpdateRoomDetailsEvent, typeof(UpdateRoomDetailsEvent));
			messageTypeToApiClass.Add(MessageType.ConnectionClosedEvent, typeof(ConnectionClosedEvent));
			messageTypeToApiClass.Add(MessageType.UserVariableUpdateEvent, typeof(UserVariableUpdateEvent));
			messageTypeToApiClass.Add(MessageType.CreateRoomRequest, typeof(CreateRoomRequest));
			messageTypeToApiClass.Add(MessageType.ValidateAdditionalLoginResponse, typeof(ValidateAdditionalLoginResponse));
			messageTypeToApiClass.Add(MessageType.DHPublicNumbers, typeof(DHPublicNumbersResponse));
			messageTypeToApiClass.Add(MessageType.BuddyStatusUpdatedEvent, typeof(BuddyStatusUpdateEvent));
			messageTypeToApiClass.Add(MessageType.PluginRequest, typeof(PluginRequest));
			messageTypeToApiClass.Add(MessageType.RegistryConnectToPreferredGatewayRequest, typeof(RegistryConnectToPreferredGatewayRequest));
			messageTypeToApiClass.Add(MessageType.AggregatePluginMessageEvent, typeof(AggregatePluginMessageEvent));
			messageTypeToApiClass.Add(MessageType.GetUserVariablesResponse, typeof(GetUserVariablesResponse));
			messageTypeToApiClass.Add(MessageType.GetServerLocalTimeResponse, typeof(GetServerLocalTimeResponse));
			messageTypeToApiClass.Add(MessageType.UserEvictedFromRoomEvent, typeof(UserEvictedFromRoomEvent));
			messageTypeToApiClass.Add(MessageType.ConnectionResponse, typeof(ConnectionResponse));
			messageTypeToApiClass.Add(MessageType.CreateOrJoinGameRequest, typeof(QuickJoinGameRequest));
			messageTypeToApiClass.Add(MessageType.RemoveBuddiesResponse, typeof(RemoveBuddiesResponse));
			messageTypeToApiClass.Add(MessageType.FindGamesRequest, typeof(FindGamesRequest));
			messageTypeToApiClass.Add(MessageType.EvictUserFromRoomRequest, typeof(EvictUserFromRoomRequest));
			messageTypeToApiClass.Add(MessageType.DeleteUserVariableRequest, typeof(DeleteUserVariableRequest));
			messageTypeToApiClass.Add(MessageType.GetUsersInRoomResponse, typeof(GetUsersInRoomResponse));
			messageTypeToApiClass.Add(MessageType.ValidateAdditionalLoginRequest, typeof(ValidateAdditionalLoginRequest));
			messageTypeToApiClass.Add(MessageType.GetUserCountResponse, typeof(GetUserCountResponse));
			messageTypeToApiClass.Add(MessageType.JoinRoomRequest, typeof(JoinRoomRequest));
			messageTypeToApiClass.Add(MessageType.ZoneUpdateEvent, typeof(ZoneUpdateEvent));
			messageTypeToApiClass.Add(MessageType.PublicMessageEvent, typeof(PublicMessageEvent));
			messageTypeToApiClass.Add(MessageType.LeaveRoomEvent, typeof(LeaveRoomEvent));
			messageTypeToApiClass.Add(MessageType.PrivateMessageEvent, typeof(PrivateMessageEvent));
			messageTypeToApiClass.Add(MessageType.PingResponse, typeof(PingResponse));
			messageTypeToApiClass.Add(MessageType.FindZoneAndRoomByNameRequest, typeof(FindZoneAndRoomByNameRequest));
			messageTypeToApiClass.Add(MessageType.LeaveRoomRequest, typeof(LeaveRoomRequest));
			messageTypeToApiClass.Add(MessageType.LeaveZoneEvent, typeof(LeaveZoneEvent));
			messageTypeToApiClass.Add(MessageType.CrossDomainRequest, typeof(CrossDomainPolicyRequest));
			messageTypeToApiClass.Add(MessageType.AddRoomOperatorRequest, typeof(AddRoomOperatorRequest));
			messageTypeToApiClass.Add(MessageType.UpdateUserVariableRequest, typeof(UpdateUserVariableRequest));
			messageTypeToApiClass.Add(MessageType.UpdateRoomVariableRequest, typeof(UpdateRoomVariableRequest));
			messageTypeToApiClass.Add(MessageType.DHSharedModulusRequest, typeof(DHSharedModulusRequest));
			messageTypeToApiClass.Add(MessageType.RoomVariableUpdateEvent, typeof(RoomVariableUpdateEvent));
			messageTypeToApiClass.Add(MessageType.PingRequest, typeof(PingRequest));
			messageTypeToApiClass.Add(MessageType.UserUpdateEvent, typeof(UserUpdateEvent));
		}

		public static Type getApiClass(MessageType messageType)
		{
			return messageTypeToApiClass[messageType];
		}

		public static MessageType getMessageType(short messageTypeIndicator)
		{
			return messageTypeIndicatorToMessageType[messageTypeIndicator];
		}

		public static short getMessageTypeIndicator(MessageType messageType)
		{
			return messageTypeToMessageTypeIndicator[messageType];
		}
	}
}
